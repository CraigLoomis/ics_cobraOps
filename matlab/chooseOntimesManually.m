%% Autogenerated Motormaps
%% this script runs ONLY on the testbedcomputer
close all
clear all

%% INPUTS

% Define test directory with folders containing the streak images
topdir = '.';

% % Specify number of buckets (leave at 100 if unsure)
% numBuckets = 100;
% 
% % bw threshold will be bwfactor*mean(img)
% bwfactor = 3.75; % reduce this if your circles dont appear fully on the bw image.
% 
% % Sensitivity of Hough transform circle detection (higher will detect more
% % circles) range is between 0 and 1
% thetaCircSnstvty = 0.95;
% phiCircSnstvty = 0.945;
% 
% %Define the Range in which the Circle-Radii are. (in px)
% radiusRange = [19, 45]; %For PHI = [20, 40], for THETA = [40, 120]

% What interval are motors using?
interval = 2.5; %ms

ManualSelectedOntimes = [100 90 50 50 50 100 60 70 50]; %In usec

% Which image should be used to get centers initially. Specify 
% cntrImgFilter = 'ontime_080us';


%% EXECUTION

% Get list of images from directory
% images = dir2cell(fullfile(topdir, '*.fits'));
images = ls(fullfile(topdir, '*.fits'));
for ii=1:length(images(:,1))
    imageCells{ii} = images(ii,:);
end
images = imageCells;


% Determine which stage
stages = regexp(reshape(char(images)',1,[]),'(?<=S)\d(?=_ontime)','match');
stage = stages{1};% assume first is correct


selectedOntimes = ManualSelectedOntimes;

% Determine which stage and direction this data is for
stages = regexp(reshape(char(images)',1,[]),'(?<=S)\d(?=_ontime)','match');
dirs = regexp(reshape(char(images)',1,[]),'(?<=_ontime_\d*_*us_)(fw|rv)','match');
stage = stages{1};% assume first is correct
dir = dirs{1}; % assume first is correct

% Package the resulting ontimes into CobraConfig
ConfigTemplate = loadCfgXml;
% pids = cellfun(@str2num,pId);
pids = [1:9];
for pid = 1:max(pids)
    armfld = sprintf('ARM_DATA_%d',pid);
    if isfield(ConfigTemplate.ARM_DATA,armfld)
        CobraConfig.ARM_DATA.(armfld) = ConfigTemplate.ARM_DATA.(armfld);
    else
        CobraConfig.ARM_DATA.(armfld) = ConfigTemplate.ARM_DATA.ARM_DATA_1;
    end
end
for ii = 1:length(pids)
    switch stage
        
        case '1' % Theta
            
            
            % Save centers
            % CobraConfig = setARMval(CobraConfig,pids(ii),'Global_base_pos_x',real(crm(ii,1)));
            % CobraConfig = setARMval(CobraConfig,pids(ii),'Global_base_pos_y',imag(crm(ii,1)));
            
            switch dir
                case 'fw'
                    CobraConfig = setARMval(CobraConfig,pids(ii),'Link1_fwd_Duration',selectedOntimes(ii)/1000);
                    CobraConfig = setARMval(CobraConfig,pids(ii),'Link1_fwd_Intervals',interval);
                    CobraConfig = setARMval(CobraConfig,pids(ii),'Link1_fwd_Duration_Slow',selectedOntimes(ii)/1000);
                    CobraConfig = setARMval(CobraConfig,pids(ii),'Link1_fwd_Intervals_Slow',interval);
%                     fprintf('\n THETA FWD')
                case 'rv'
                    CobraConfig = setARMval(CobraConfig,pids(ii),'Link1_rev_Duration',selectedOntimes(ii)/1000);
                    CobraConfig = setARMval(CobraConfig,pids(ii),'Link1_rev_Intervals',interval);
                    CobraConfig = setARMval(CobraConfig,pids(ii),'Link1_rev_Duration_Slow',selectedOntimes(ii)/1000);
                    CobraConfig = setARMval(CobraConfig,pids(ii),'Link1_rev_Intervals_Slow',interval);
%                     fprintf('\n THETA REV')
            end
            
        case '2' % Phi
            switch dir
                case 'fw'
                    CobraConfig = setARMval(CobraConfig,pids(ii),'Link2_fwd_Duration',selectedOntimes(ii)/1000);
                    CobraConfig = setARMval(CobraConfig,pids(ii),'Link2_fwd_Intervals',interval);
                    CobraConfig = setARMval(CobraConfig,pids(ii),'Link2_fwd_Duration_Slow',selectedOntimes(ii)/1000);
                    CobraConfig = setARMval(CobraConfig,pids(ii),'Link2_fwd_Intervals_Slow',interval);
%                     fprintf('\n PHI FWD')
                case 'rv'
                    CobraConfig = setARMval(CobraConfig,pids(ii),'Link2_rev_Duration',selectedOntimes(ii)/1000);
                    CobraConfig = setARMval(CobraConfig,pids(ii),'Link2_rev_Intervals',interval);
                    CobraConfig = setARMval(CobraConfig,pids(ii),'Link2_rev_Duration_Slow',selectedOntimes(ii)/1000);
                    CobraConfig = setARMval(CobraConfig,pids(ii),'Link2_rev_Intervals_Slow',interval);
%                     fprintf('\n PHI REVERSE')
            end
    end
end

[xmlfile, xmlfilepath] = uiputfile('*.xml','Save new CobraConfig XML file with ontimes and centers');
cobraCfg2xml(CobraConfig,fullfile(xmlfilepath,xmlfile));    
    







